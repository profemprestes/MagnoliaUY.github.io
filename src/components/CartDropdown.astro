---
interface Props {
  isOpen: boolean;
}

const { isOpen } = Astro.props;
---

<div 
  id="cartDropdown"
  class:list={[
    "absolute top-full right-0 mt-2 w-96 bg-white rounded-lg shadow-lg z-50 transform transition-all duration-300 origin-top",
    isOpen ? "scale-100 opacity-100" : "scale-95 opacity-0 pointer-events-none"
  ]}
>
  <div class="p-4">
    <div id="cartItems" class="max-h-96 overflow-y-auto">
      <!-- Cart items will be rendered here -->
    </div>
    
    <div id="cartForm" class="mt-4 border-t border-gray-200 pt-4 hidden">
      <h4 class="font-cormorant text-xl text-magnolia-earth mb-4">Datos para el pedido</h4>
      <form id="checkoutForm" class="space-y-4">
        <div>
          <label for="name" class="block text-sm text-magnolia-earth/70">Nombre</label>
          <input 
            type="text" 
            id="name" 
            name="name" 
            required
            class="w-full px-3 py-2 border border-magnolia-earth/20 rounded-lg focus:outline-none focus:border-magnolia-earth"
          />
        </div>
        <div>
          <label for="phone" class="block text-sm text-magnolia-earth/70">Tel√©fono</label>
          <input 
            type="tel" 
            id="phone" 
            name="phone" 
            required
            class="w-full px-3 py-2 border border-magnolia-earth/20 rounded-lg focus:outline-none focus:border-magnolia-earth"
          />
        </div>
        <div>
          <label for="address" class="block text-sm text-magnolia-earth/70">Direcci√≥n</label>
          <textarea 
            id="address" 
            name="address" 
            required
            rows="2"
            class="w-full px-3 py-2 border border-magnolia-earth/20 rounded-lg focus:outline-none focus:border-magnolia-earth"
          ></textarea>
        </div>
        <button 
          type="submit"
          class="w-full bg-magnolia-earth text-magnolia-cream py-3 rounded-full font-cormorant text-lg hover:bg-magnolia-earth/90 transition-colors flex items-center justify-center gap-2"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
            <path d="M.057 24l1.687-6.163c-1.041-1.804-1.588-3.849-1.587-5.946.003-6.556 5.338-11.891 11.893-11.891 3.181.001 6.167 1.24 8.413 3.488 2.245 2.248 3.481 5.236 3.48 8.414-.003 6.557-5.338 11.892-11.893 11.892-1.99-.001-3.951-.5-5.688-1.448l-6.305 1.654zm6.597-3.807c1.676.995 3.276 1.591 5.392 1.592 5.448 0 9.886-4.434 9.889-9.885.002-5.462-4.415-9.89-9.881-9.892-5.452 0-9.887 4.434-9.889 9.884-.001 2.225.651 3.891 1.746 5.634l-.999 3.648 3.742-.981zm11.387-5.464c-.074-.124-.272-.198-.57-.347-.297-.149-1.758-.868-2.031-.967-.272-.099-.47-.149-.669.149-.198.297-.768.967-.941 1.165-.173.198-.347.223-.644.074-.297-.149-1.255-.462-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.297-.347.446-.521.151-.172.2-.296.3-.495.099-.198.05-.372-.025-.521-.075-.148-.669-1.611-.916-2.206-.242-.579-.487-.501-.669-.51l-.57-.01c-.198 0-.52.074-.792.372s-1.04 1.016-1.04 2.479 1.065 2.876 1.213 3.074c.149.198 2.095 3.2 5.076 4.487.709.306 1.263.489 1.694.626.712.226 1.36.194 1.872.118.571-.085 1.758-.719 2.006-1.413.248-.695.248-1.29.173-1.414z"/>
          </svg>
          Finalizar pedido por WhatsApp
        </button>
      </form>
    </div>

    <div id="emptyCart" class="text-center py-8">
      <p class="text-magnolia-earth/70">Tu carrito est√° vac√≠o</p>
      <a 
        href="/#products" 
        class="inline-block mt-4 text-magnolia-earth hover:text-magnolia-earth/70 transition-colors"
      >
        Ver productos
      </a>
    </div>
  </div>
</div>

<script>
  interface CartItem {
    id: number;
    name: string;
    price: number;
    quantity: number;
    image: string; // This will now represent the directory
  }

  const cartDropdown = document.getElementById('cartDropdown');
  const cartItems = document.getElementById('cartItems');
  const cartForm = document.getElementById('cartForm');
  const emptyCart = document.getElementById('emptyCart');
  const checkoutForm = document.getElementById('checkoutForm');

  function renderCart() {
    const cart: CartItem[] = JSON.parse(localStorage.getItem('magnoliaCart') || '[]');
    
    if (!cartItems || !cartForm || !emptyCart) return;

    if (cart.length === 0) {
      cartItems.innerHTML = '';
      cartForm.classList.add('hidden');
      emptyCart.classList.remove('hidden');
      return;
    }

    emptyCart.classList.add('hidden');
    cartForm.classList.remove('hidden');

    cartItems.innerHTML = cart.map(item => `
      <div class="flex items-center gap-4 py-2 border-b border-gray-100">
        <img 
          src="/imagenes${item.image}/principal.webp" 
          alt="${item.name}"
          class="w-16 h-16 object-cover rounded"
          width="64"
          height="64"
        />
        <div class="flex-1">
          <h4 class="font-cormorant text-lg text-magnolia-earth">${item.name}</h4>
          <p class="text-sm text-magnolia-earth/70">$${item.price} UYU x ${item.quantity}</p>
        </div>
        <button 
          class="remove-item text-magnolia-earth/50 hover:text-magnolia-earth transition-colors"
          data-id="${item.id}"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
          </svg>
        </button>
      </div>
    `).join('');

    // Add event listeners for remove buttons
    document.querySelectorAll('.remove-item').forEach(button => {
      button.addEventListener('click', (e) => {
        const id = Number((e.currentTarget as HTMLButtonElement).dataset.id);
        let cart: CartItem[] = JSON.parse(localStorage.getItem('magnoliaCart') || '[]');
        cart = cart.filter(item => item.id !== id);
        localStorage.setItem('magnoliaCart', JSON.stringify(cart));
        renderCart();
      });
    });
  }

  // Handle form submission
  checkoutForm?.addEventListener('submit', (e) => {
    e.preventDefault();
    const formData = new FormData(e.target as HTMLFormElement);
    const cart: CartItem[] = JSON.parse(localStorage.getItem('magnoliaCart') || '[]');
    
    const message = `¬°Hola! üëã Quiero hacer un pedido:

Datos del cliente:
- Nombre: ${formData.get('name')}
- Tel√©fono: ${formData.get('phone')}
- Direcci√≥n: ${formData.get('address')}

Productos:
${cart.map(item => `- ${item.name} (x${item.quantity}) - $${item.price * item.quantity} UYU`).join('\n')}

Total: $${cart.reduce((sum, item) => sum + (item.price * item.quantity), 0)} UYU`;

    window.open(`https://wa.me/59898150140?text=${encodeURIComponent(message)}`, '_blank');
  });

  // Initial render
  renderCart();

  // Listen for cart updates
  window.addEventListener('storage', (e) => {
    if (e.key === 'magnoliaCart') {
      renderCart();
    }
  });

  // Custom event for cart updates
  document.addEventListener('cartUpdated', () => {
    renderCart();
  });
</script>