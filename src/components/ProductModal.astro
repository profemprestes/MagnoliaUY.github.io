---
export interface Props {
  id: string;
  title: string;
  description: string;
  image: string;
  price: number;
}

const { id, title, description, image, price } = Astro.props;
---

<div
  id={`modal-${id}`}
  class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden"
  role="dialog"
  aria-labelledby={`modal-title-${id}`}
>
  <div class="min-h-screen px-4 text-center">
    <div class="fixed inset-0 transition-opacity" aria-hidden="true">
      <div class="absolute inset-0 bg-black opacity-75"></div>
    </div>

    <!-- Modal panel -->
    <div
      class="inline-block w-full max-w-2xl p-6 my-8 text-left align-middle transition-all transform bg-magnolia-cream shadow-xl rounded-2xl"
    >
      <div class="absolute top-0 right-0 pt-4 pr-4">
        <button
          type="button"
          class="close-modal text-gray-400 hover:text-gray-500"
          aria-label="Close"
        >
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"
            ></path>
          </svg>
        </button>
      </div>

      <div class="mt-3">
        <img
          src={image}
          alt={title}
          class="w-full h-64 object-cover rounded-lg mb-4"
          width="640"
          height="256"
        />
        <h3
          class="font-cormorant text-3xl text-magnolia-earth mb-4"
          id={`modal-title-${id}`}
        >
          {title}
        </h3>
        <div class="prose text-magnolia-earth/80 mb-6 whitespace-pre-line">
          {description}
        </div>
        <div class="flex items-center justify-between">
          <span class="font-cormorant text-2xl text-magnolia-earth">
            ${price} UYU
          </span>
          <button
            class="add-to-cart bg-magnolia-earth text-magnolia-cream px-8 py-3 rounded-full text-lg hover:bg-magnolia-earth/90 transition-colors duration-300"
            data-product={JSON.stringify({ id, title, price, image })}
          >
            Agregar al carrito
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // Modal functionality
  const modals = document.querySelectorAll('[id^="modal-"]');
  const closeButtons = document.querySelectorAll('.close-modal');

  // Close modal when clicking outside
  modals.forEach((modal) => {
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.add('hidden');
        document.body.classList.remove('overflow-hidden');
      }
    });
  });

  // Close modal when clicking close button
  closeButtons.forEach((button) => {
    button.addEventListener('click', () => {
      const modal = button.closest('[id^="modal-"]');
      if (modal) {
        modal.classList.add('hidden');
        document.body.classList.remove('overflow-hidden');
      }
    });
  });

  // Close modal on escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      modals.forEach((modal) => {
        modal.classList.add('hidden');
        document.body.classList.remove('overflow-hidden');
      });
    }
  });
</script>